name: Deploy to S3

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      env:
        # React app environment variables for file uploads (no credentials needed)
        REACT_APP_AWS_REGION: ${{ secrets.REACT_APP_AWS_REGION }}
        REACT_APP_S3_BUCKET_NAME: ${{ secrets.REACT_APP_S3_BUCKET_NAME }}
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: Deploy to S3
      run: |
        echo "üöÄ Deploying build files to S3..."
        aws s3 sync build/ s3://${{ secrets.S3_BUCKET_NAME }} \
          --delete \
          --cache-control "public, max-age=31536000" \
          --exclude "*.html" \
          --exclude "service-worker.js"
        
        # Upload HTML files with shorter cache control for faster updates
        aws s3 sync build/ s3://${{ secrets.S3_BUCKET_NAME }} \
          --cache-control "public, max-age=0, must-revalidate" \
          --include "*.html" \
          --include "service-worker.js"
        
        echo "‚úÖ S3 deployment complete"
        
    - name: Invalidate CloudFront cache (if configured)
      run: |
        if [ -n "${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}" ]; then
          echo "üîÑ Invalidating CloudFront cache..."
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
          echo "‚úÖ CloudFront invalidation initiated"
        else
          echo "‚ÑπÔ∏è No CloudFront distribution configured, skipping cache invalidation"
        fi
        
    - name: Deployment summary
      run: |
        echo "üéâ Deployment completed successfully!"
        echo "üìä Deployment Summary:"
        echo "  ‚Ä¢ S3 Bucket: ${{ secrets.S3_BUCKET_NAME }}"
        echo "  ‚Ä¢ AWS Region: ${{ secrets.AWS_REGION }}"
        if [ -n "${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}" ]; then
          echo "  ‚Ä¢ CloudFront Distribution: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}"
        fi
        echo ""
        echo "üåê Your application is now live!"